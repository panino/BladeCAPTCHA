async function initCaptcha(e){if("manualHandling"===(e={mode:"manualHandling",onSuccess:null,onError:null,formSelector:"",inputName:null,statusSelector:"",verifyButtonSelector:"",submitButtonSelector:"",onStart:null,onEnd:null,onProgress:null,manualHandlingAutoStartOnLoad:!1,apiBaseUrl:"../php",...e}).mode){if(e.formSelector||e.submitButtonSelector)return Promise.reject(new Error("Manual mode must not use formSelector nor submitButtonSelector"));e.inputName&&console.warn("Manual mode does not use inputName for hidden token. This value will be ignored")}const n="autoFormIntegration"===e.mode&&e.formSelector?document.querySelector(e.formSelector):null;function t(e,n){if(!e)return null;if(n){let t=document.querySelector(e);return t&&t.closest&&t.closest("form")===n?t:n.querySelector(e)}return document.querySelector(e)}let r=null;"autoFormIntegration"===e.mode&&e.inputName&&n&&(r=n.querySelector(`[name="${e.inputName}"]`)||null);const o=t(e.statusSelector,n),a=t(e.verifyButtonSelector,n),c=t(e.submitButtonSelector,n),i=function(){const e=new Uint8Array(16);return crypto.getRandomValues(e),Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")}();let s=!1,l={success:!1,error:!1,cancel:!1,load:!1},u=null;function d(n){if("function"==typeof e.onProgress&&u!==n)try{e.onProgress(n),u=n}catch(e){console.error("onProgress error",e)}}const f=new URL(".",import.meta.url).href.replace(/\/$/,""),m=n=>`${e.apiBaseUrl.replace(/\/$/,"")}/${n}`;function p(e,n=""){o&&(o.textContent=e,o.className=n)}function h(e){let n;if(e instanceof Error&&e.message)n=e.message;else if("string"==typeof e)n=e;else try{n=JSON.stringify(e)}catch{n=String(e)}return n.replace(/^\s*Error\s*:\s*/i,"")}function y(n,...t){if("onSuccess"===n){if(l.success)return;if(l.success=!0,"function"==typeof e.onSuccess)try{e.onSuccess(...t)}catch(e){console.error("onSuccess error",e)}}else if("onError"===n){if(l.error)return;if(l.error=!0,"function"==typeof e.onError)try{e.onError(...t)}catch(e){console.error("onError error",e)}}else if("onEnd"===n){if(l.cancel)return;if(l.cancel=!0,"function"==typeof e.onEnd)try{e.onEnd(...t)}catch(e){console.error("onEnd error",e)}}else if("onStart"===n){if(l.load)return;if(l.load=!0,"function"==typeof e.onStart)try{e.onStart(...t)}catch(e){console.error("onStart error",e)}}}async function g(e,n={}){const t=await fetch(e,n);if(!t.ok){let e;try{e=await t.json()}catch{e={message:await t.text().catch(()=>"")||`HTTP ${t.status}`}}throw new Error(e.message||`HTTP ${t.status}`)}return(t.headers.get("content-type")||"").includes("application/json")?await t.json():await t.text()}async function S(){if(p("Retrieving challenge...","loading"),s)return{success:!1,message:"Another process in progress"};s=!0,l={success:!1,error:!1,cancel:!1,load:!1},a&&(a.disabled=!0);try{const{challenge:t,difficulty:a}=await g(m("captcha.php"),{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"GET_POW_CHALLENGE",claveCaptcha:i})});let c;p("Solving challenge...","loading");try{c=await function(n,t){const r=matchMedia("(pointer: coarse)").matches,a=r?5e3:1e4,c=r?2e3:5e3,i=r?1e4:2e4,s=r?Math.min(2,navigator.hardwareConcurrency||1):Math.min(4,navigator.hardwareConcurrency||4),l=5e5,u=r?2:1;let m=0,h=0,y=0,g=!1,S=!1;const w=[],E=Array(s).fill(a),v=Array(s).fill(0),b="function"==typeof e.onProgress,k=!!o;function C(e){if(g||m>=l)return;let r=v[e]||0,o=E[e]||a,s=o;if(r>0){const e=2e3;s=Math.min(i,Math.max(c,Math.floor(o*(e/r))))}const d=m,f=Math.min(m+s,l);m=f,E[e]=f-d,v[e]=Date.now(),w[e].postMessage({challenge:n,difficulty:t,loguear:k,progress:b,start:d,end:f,timeFactor:u})}return new Promise((e,n)=>{for(let t=0;t<s;t++){const r=new Worker(`${f}/workers/pow-worker.min.js`);w.push(r),r.onmessage=n=>{const r=n.data||{};if(void 0!==r.nonce&&!S)return S=!0,g=!0,d(100),e(r.nonce),void w.forEach(e=>e.terminate());if(r.done){const e=Date.now()-v[t];v[t]=e,h+=r.end-r.start||a,g||C(t)}if(void 0!==r.perc&&!g){const e=(h+((r.end-r.start)*r.perc/100||0))/l*100;d(Math.min(99.99,e.toFixed(2)))}void 0===r.attempts||g||(y+=r.attempts,p(`Calculating… (${y} attempts)`,"info"))},r.onerror=e=>{S||(S=!0,d(100),n(new Error("Worker error: "+(e?.message||e))),w.forEach(e=>e.terminate()))},C(t)}})}(t,a)}catch(e){const n=`Error: ${h(e)}`;return p(n,"error"),y("onError",e),{success:!1,message:n}}p("Sending result...","loading");const s="VALIDATE_POW_CHALLENGE",l=await g(m("captcha.php"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({challenge:t,nonce:c,proceso:s,claveCaptcha:i})});if(p(l.message||"",l.success?"success":"error"),l.success&&n&&(r||(r=document.createElement("input"),r.name=e.inputName,r.type="hidden",n.appendChild(r)),r.value=l.token_validacion||""),l.success)return y("onSuccess",l.token_validacion||""),{success:!0,token:l.token_validacion||"",message:l.message||""};return y("onError",new Error(l.message||"Validation failed")),{success:!1,message:l.message||"Validation failed"}}catch(e){const n=`Error: ${h(e)}`;return p(n,"error"),y("onError",e),{success:!1,message:n}}finally{a&&(a.disabled=!1),s=!1}}async function w(){const{token:e,target_iterations:n}=await g(m("captcha.php"),{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"getPerformanceChallenge",claveCaptcha:i})});try{await function(e=1e6){return new Promise((n,t)=>{const r=new Worker(`${f}/workers/benchmark-worker.min.js`);r.postMessage({iterations:e}),r.onmessage=e=>{e.data&&e.data.done?n():t(new Error("Benchmark did not finish correctly")),r.terminate()},r.onerror=e=>{t(e),r.terminate()}})}(n)}catch(e){console.log("Benchmark failed",e)}await g(m("captcha.php"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e,proceso:"verifyPerformanceChallenge",claveCaptcha:i})})}async function E(e){if(e.preventDefault(),!s){y("onStart"),u=null,d(0);try{await w(),await S()}catch(e){p(h(e),"error"),y("onError",e)}finally{y("onEnd"),d(100),a&&(a.disabled=!1),s=!1}}}if("manualHandling"===e.mode)a||e.manualHandlingAutoStartOnLoad||console.warn('⚠️ "verifyButtonSelector" was not found and "manualHandlingAutoStartOnLoad" is disabled.\n   Verification cannot be initiated manually or automatically'),a&&e.manualHandlingAutoStartOnLoad&&console.info('ℹ️ "manualHandlingAutoStartOnLoad" is enabled and a verify button also exists.\n   This might be redundant: verification will run automatically when the page loads,\n   but the button will remain visible to run it again if desired'),document.addEventListener("DOMContentLoaded",async()=>{if(a&&a.addEventListener("click",async e=>{try{try{await E(e)}finally{y("onEnd")}}catch(e){p(h(e),"error"),y("onError",e)}}),e.manualHandlingAutoStartOnLoad)try{try{await E()}finally{y("onEnd")}}catch(e){p(h(e),"error"),y("onError",e)}});else if("autoFormIntegration"===e.mode){if(!c)return void console.warn("submitButtonSelector not found");if(!n)return void console.warn("formSelector not found");document.addEventListener("DOMContentLoaded",()=>{c.addEventListener("click",async e=>{if(e.preventDefault(),!c.disabled&&!s){c.disabled=!0,y("onStart"),u=null,d(0);try{try{y("onStart"),u=null,d(0),await w();const e=await S(),t=e.token||(r?r.value:""),o=!!t&&/^[a-f0-9]{32}$/i.test(t);if(e.success&&o)return void n.submit();const a=e.message||"Verification could not be completed";p(a,"error"),y("onError",new Error(a))}finally{y("onEnd")}}catch(e){p(`Error: ${h(e)}`,"error"),y("onError",e)}finally{s=!1,c.disabled=!1,d(100)}}})})}}export{initCaptcha};