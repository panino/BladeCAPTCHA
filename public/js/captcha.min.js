async function initCaptcha(e){if("manualHandling"===(e={mode:"manualHandling",onSuccess:null,onError:null,formSelector:"",inputName:null,statusSelector:"",verifyButtonSelector:"",submitButtonSelector:"",onStart:null,onEnd:null,onProgress:null,manualHandlingAutoStartOnLoad:!1,apiBaseUrl:"../php",...e}).mode){if(e.formSelector||e.submitButtonSelector)return Promise.reject(new Error("Manual mode must not use formSelector nor submitButtonSelector"));e.inputName&&console.warn("Manual mode does not use inputName for hidden token. This value will be ignored")}const r="autoFormIntegration"===e.mode&&e.formSelector?document.querySelector(e.formSelector):null;function t(e,r){if(!e)return null;if(r){let t=document.querySelector(e);return t&&t.closest&&t.closest("form")===r?t:r.querySelector(e)}return document.querySelector(e)}let n=null;"autoFormIntegration"===e.mode&&e.inputName&&r&&(n=r.querySelector(`[name="${e.inputName}"]`)||null);const o=t(e.statusSelector,r),a=t(e.verifyButtonSelector,r),s=t(e.submitButtonSelector,r),c=function(){const e=new Uint8Array(16);return crypto.getRandomValues(e),Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")}();let i=!1,l={success:!1,error:!1,cancel:!1,load:!1},u=null;function d(r){if("function"==typeof e.onProgress&&u!==r)try{e.onProgress(r),u=r}catch(e){console.error("onProgress error",e)}}const f=new URL(".",import.meta.url).href.replace(/\/$/,""),m=r=>`${e.apiBaseUrl.replace(/\/$/,"")}/${r}`;function p(e,r=""){o&&(o.textContent=e,o.className=r)}function h(e){let r;if(e instanceof Error&&e.message)r=e.message;else if("string"==typeof e)r=e;else try{r=JSON.stringify(e)}catch{r=String(e)}return r.replace(/^\s*Error\s*:\s*/i,"")}function y(r,...t){if("onSuccess"===r){if(l.success)return;if(l.success=!0,"function"==typeof e.onSuccess)try{e.onSuccess(...t)}catch(e){console.error("onSuccess error",e)}}else if("onError"===r){if(l.error)return;if(l.error=!0,"function"==typeof e.onError)try{e.onError(...t)}catch(e){console.error("onError error",e)}}else if("onEnd"===r){if(l.cancel)return;if(l.cancel=!0,"function"==typeof e.onEnd)try{e.onEnd(...t)}catch(e){console.error("onEnd error",e)}}else if("onStart"===r){if(l.load)return;if(l.load=!0,"function"==typeof e.onStart)try{e.onStart(...t)}catch(e){console.error("onStart error",e)}}}async function g(e,r={}){const t=await fetch(e,r);if(!t.ok){let e;try{e=await t.json()}catch{e={message:await t.text().catch(()=>"")||`HTTP ${t.status}`}}throw new Error(e.message||`HTTP ${t.status}`)}return(t.headers.get("content-type")||"").includes("application/json")?await t.json():await t.text()}async function S(){if(p("Retrieving challenge...","loading"),i)return{success:!1,message:"Another process in progress"};i=!0,l={success:!1,error:!1,cancel:!1,load:!1},a&&(a.disabled=!0);try{const{challenge:t,difficulty:a}=await g(m("captcha.php"),{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"GET_POW_CHALLENGE",claveCaptcha:c})});let s;p("Solving challenge...","loading");try{s=await function(r,t){const n=matchMedia("(pointer: coarse)").matches,a=n?5e3:1e4,s=n?2e3:5e3,c=n?1e4:2e4,i=n?Math.min(2,navigator.hardwareConcurrency||1):Math.min(4,navigator.hardwareConcurrency||4),l=5e5,m=n?2:1;let h=0,y=!1,g=!1;const S=[],E=Array(i).fill(a),w=Array(i).fill(0),v="function"==typeof e.onProgress,b=!!o,C=[{start:0,end:l}];function L(e){if(y||!C.length)return;const{start:n,end:o}=C.shift();let i=w[e]||0,l=E[e]||a,u=l;i>0&&(u=Math.min(c,Math.max(s,Math.floor(l*(2e3/i)))));const d=Math.min(n+u,o);E[e]=d-n,w[e]=Date.now(),S[e].postMessage({challenge:r,difficulty:t,loguear:b,progress:v,start:n,end:d,timeFactor:m,targetTime:2e3}),d<o&&C.unshift({start:d,end:o})}return new Promise((e,r)=>{for(let t=0;t<i;t++){const n=new Worker(`${f}/workers/pow-worker.min.js`);S.push(n),n.onmessage=r=>{const n=r.data||{};if(void 0!==n.nonce&&!g)return g=!0,y=!0,d(100),e(n.nonce),void S.forEach(e=>e.terminate());if(n.done){const e=Date.now()-w[t];w[t]=e,n.partial?(h+=n.nextStart-n.start||0,n.nextStart<n.end&&((o=n.nextStart)<(s=n.end)&&C.unshift({start:o,end:s}))):h+=n.end-n.start||a,y||L(t)}var o,s;if(void 0!==n.perc&&!y){const e=(h+((n.end-n.start)*n.perc/100||0))/l*100;d(Math.min(99.99,Math.max(u,e.toFixed(2))))}void 0===n.log||y||p(`Calculatingâ€¦ (${h} attempts)`,"info")},n.onerror=e=>{g||(g=!0,d(100),r(new Error("Worker error: "+(e?.message||e))),S.forEach(e=>e.terminate()))},L(t)}})}(t,a)}catch(e){const r=`Error: ${h(e)}`;return p(r,"error"),y("onError",e),{success:!1,message:r}}p("Sending result...","loading");const i="VALIDATE_POW_CHALLENGE",l=await g(m("captcha.php"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({challenge:t,nonce:s,proceso:i,claveCaptcha:c})});if(p(l.message||"",l.success?"success":"error"),l.success&&r&&(n||(n=document.createElement("input"),n.name=e.inputName,n.type="hidden",r.appendChild(n)),n.value=l.token_validacion||""),l.success)return y("onSuccess",l.token_validacion||""),{success:!0,token:l.token_validacion||"",message:l.message||""};return y("onError",new Error(l.message||"Validation failed")),{success:!1,message:l.message||"Validation failed"}}catch(e){const r=`Error: ${h(e)}`;return p(r,"error"),y("onError",e),{success:!1,message:r}}finally{a&&(a.disabled=!1),i=!1}}async function E(e){if(e&&e.preventDefault(),!i){y("onStart"),u=null,d(0);try{await S()}catch(e){p(h(e),"error"),y("onError",e)}finally{y("onEnd"),d(100),a&&(a.disabled=!1),i=!1}}}if("manualHandling"===e.mode)document.addEventListener("DOMContentLoaded",()=>{a&&a.addEventListener("click",async e=>{try{try{await E(e)}finally{y("onEnd")}}catch(e){p(h(e),"error"),y("onError",e)}}),e.manualHandlingAutoStartOnLoad&&(async()=>{try{try{await E()}finally{y("onEnd")}}catch(e){p(h(e),"error"),y("onError",e)}})()});else if("autoFormIntegration"===e.mode){if(!s)return void console.warn("submitButtonSelector not found");if(!r)return void console.warn("formSelector not found");document.addEventListener("DOMContentLoaded",()=>{s.addEventListener("click",async e=>{if(e.preventDefault(),!s.disabled&&!i){s.disabled=!0,y("onStart"),u=null,d(0);try{try{y("onStart"),u=null,d(0);const e=await S(),t=e.token||(n?n.value:""),o=!!t&&/^[a-f0-9]{32}$/i.test(t);if(e.success&&o)return void r.submit();const a=e.message||"Verification could not be completed";p(a,"error"),y("onError",new Error(a))}finally{y("onEnd")}}catch(e){p(`Error: ${h(e)}`,"error"),y("onError",e)}finally{i=!1,s.disabled=!1,d(100)}}})})}}export{initCaptcha};