async function initCaptcha(e){if("manualHandling"===(e={mode:"manualHandling",onSuccess:null,onError:null,formSelector:"",inputName:null,statusSelector:"",verifyButtonSelector:"",submitButtonSelector:"",onStart:null,onEnd:null,onProgress:null,manualHandlingAutoStartOnLoad:!1,...e}).mode){if(e.formSelector||e.submitButtonSelector)return Promise.reject(new Error("Modo manual no debe usar formSelector ni submitButtonSelector."));e.inputName&&console.warn("Modo manual no usa inputName para token oculto. Este valor será ignorado.")}const o="autoFormIntegration"===e.mode&&e.formSelector?document.querySelector(e.formSelector):null;function r(e,o){if(!e)return null;if(o){let r=document.querySelector(e);return r&&r.closest&&r.closest("form")===o?r:o.querySelector(e)}return document.querySelector(e)}let n=null;"autoFormIntegration"===e.mode&&e.inputName&&o&&(n=o.querySelector(`[name="${e.inputName}"]`)||null);const t=r(e.statusSelector,o),a=r(e.verifyButtonSelector,o),c=r(e.submitButtonSelector,o),s=function(){const e=new Uint8Array(16);return crypto.getRandomValues(e),Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")}();let i=!1,l={success:!1,error:!1,cancel:!1,load:!1};const u=new URL(".",import.meta.url).href.replace(/\/$/,"");function f(e,o=""){t&&(t.textContent=e,t.className=o)}function d(e){if(e instanceof Error&&e.message)return e.message;if("string"==typeof e)return e;try{return JSON.stringify(e)}catch{return String(e)}}function m(o,...r){if("onSuccess"===o){if(l.success)return;if(l.success=!0,"function"==typeof e.onSuccess)try{e.onSuccess(...r)}catch(e){console.error("onSuccess error",e)}}else if("onError"===o){if(l.error)return;if(l.error=!0,"function"==typeof e.onError)try{e.onError(...r)}catch(e){console.error("onError error",e)}}else if("onEnd"===o){if(l.cancel)return;if(l.cancel=!0,"function"==typeof e.onEnd)try{e.onEnd(...r)}catch(e){console.error("onEnd error",e)}}else if("onStart"===o){if(l.load)return;if(l.load=!0,"function"==typeof e.onStart)try{e.onStart(...r)}catch(e){console.error("onStart error",e)}}}async function p(e,o={}){try{const r=await fetch(e,o);if(!r.ok){let e;try{e=await r.json()}catch(o){e={message:await r.text().catch(()=>"")||`HTTP ${r.status}`}}throw new Error(e.message||`HTTP ${r.status}`)}return(r.headers.get("content-type")||"").includes("application/json")?await r.json():await r.text()}catch(e){throw e}}async function g(){if(f("Obteniendo desafío...","loading"),i)return{success:!1,message:"Otro proceso en curso"};i=!0,l={success:!1,error:!1,cancel:!1,load:!1},a&&(a.disabled=!0);try{const{challenge:r,difficulty:a}=await p("../php/captcha.php",{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"GET_POW_CHALLENGE",claveCaptcha:s})});let c;f("Resolviendo desafío...","loading");try{c=await function(o,r){return new Promise((n,a)=>{const c=new Worker(`${u}/workers/pow-worker.min.js`),s="function"==typeof e.onProgress,i=!!t;try{c.postMessage({challenge:o,difficulty:r,loguear:i,progress:s})}catch(e){return c.terminate(),a(e)}let l=!1;c.onmessage=o=>{const r=o.data||{};r.error?l||(l=!0,"function"==typeof e.onProgress&&e.onProgress(100),a(new Error(r.error)),c.terminate()):r.log?f(r.log,"info"):void 0===r.perc?void 0!==r.nonce&&(l||(l=!0,"function"==typeof e.onProgress&&e.onProgress(100),n(r.nonce),c.terminate())):"function"==typeof e.onProgress&&e.onProgress(Number(r.perc))},c.onerror=o=>{l||(l=!0,"function"==typeof e.onProgress&&e.onProgress(100),a(new Error("Error en worker: "+(o?.message||o))),c.terminate())}})}(r,a)}catch(e){const o=`Error: ${d(e)}`;return f(o,"error"),m("onError",e),{success:!1,message:o}}f("Enviando resultado...","loading");const i="VALIDATE_POW_CHALLENGE",l=await p("../php/captcha.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({challenge:r,nonce:c,proceso:i,claveCaptcha:s})});if(f(l.message||"",l.success?"success":"error"),l.success&&o&&(n||(n=document.createElement("input"),n.name=e.inputName,n.type="hidden",o.appendChild(n)),n.value=l.token_validacion||""),l.success)return m("onSuccess",l.token_validacion||""),{success:!0,token:l.token_validacion||"",message:l.message||""};return m("onError",new Error(l.message||"Validación fallida")),{success:!1,message:l.message||"Validación fallida"}}catch(e){const o=`Error: ${d(e)}`;return f(o,"error"),m("onError",e),{success:!1,message:o}}finally{a&&(a.disabled=!1),i=!1}}async function y(){const{token:e,target_iterations:o}=await p("../php/captcha.php",{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"getPerformanceChallenge",claveCaptcha:s})});try{await function(e=1e6){return new Promise((o,r)=>{const n=new Worker(`${u}/workers/benchmark-worker.min.js`);n.postMessage({iterations:e}),n.onmessage=e=>{e.data&&e.data.done?o():r(new Error("Benchmark no finalizó correctamente")),n.terminate()},n.onerror=e=>{r(e),n.terminate()}})}(o)}catch(e){console.log("Benchmark falló",e)}await p("../php/captcha.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e,proceso:"verifyPerformanceChallenge",claveCaptcha:s})})}async function h(o){if(o.preventDefault(),!i){if("function"==typeof e.onStart)try{m("onStart")}catch(o){console.error(o)}if("function"==typeof e.onProgress)try{e.onProgress(0)}catch(o){console.error(o)}if(await y(),await g(),"function"==typeof e.onEnd)try{m("onEnd")}catch(o){console.error(o)}if("function"==typeof e.onProgress)try{e.onProgress(0)}catch(o){console.error(o)}}}if("manualHandling"===e.mode)a||e.manualHandlingAutoStartOnLoad||console.warn('⚠️ No se encontró "verifyButtonSelector" y "manualHandlingAutoStartOnLoad" está desactivado.\n   La verificación no podrá iniciarse de forma manual ni automática.'),a&&e.manualHandlingAutoStartOnLoad&&console.info('ℹ️ "manualHandlingAutoStartOnLoad" está activado y también existe un botón de verificación.\n   Esto puede ser redundante: la verificación se ejecutará automáticamente al cargar la página, pero el botón seguirá visible para volver a ejecutarla si se desea.'),document.addEventListener("DOMContentLoaded",async()=>{a&&a.addEventListener("click",h),e.manualHandlingAutoStartOnLoad&&await h()});else if("autoFormIntegration"===e.mode){if(!c)return void console.warn("No se encontró submitButtonSelector");if(!o)return void console.warn("No se encontró formSelector");document.addEventListener("DOMContentLoaded",()=>{c.addEventListener("click",async r=>{if(r.preventDefault(),!c.disabled&&!i){if(c.disabled=!0,"function"==typeof e.onStart)try{m("onStart")}catch(r){console.error(r)}"function"==typeof e.onProgress&&e.onProgress(0),await y();try{const e=await g(),r=e.token||(n?n.value:""),t=!!r&&/^[a-f0-9]{32}$/i.test(r);if(e.success&&t)return void o.submit();const a=e.message||"No se pudo completar la verificación.";f(a,"error"),m("onError",new Error(a))}catch(e){f(`Error: ${d(e)}`,"error"),m("onError",e)}finally{if(i=!1,c.disabled=!1,"function"==typeof e.onEnd)try{m("onEnd")}catch(r){console.error(r)}if("function"==typeof e.onProgress)try{e.onProgress(0)}catch(r){console.error(r)}}}})})}}export{initCaptcha};