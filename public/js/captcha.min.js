async function initCaptcha(e){if("manualHandling"===(e={mode:"manualHandling",onSuccess:null,onError:null,formSelector:"",inputName:null,statusSelector:"",verifyButtonSelector:"",submitButtonSelector:"",onStart:null,onEnd:null,onProgress:null,manualHandlingAutoStartOnLoad:!1,apiBaseUrl:"../php",...e}).mode){if(e.formSelector||e.submitButtonSelector)return Promise.reject(new Error("Manual mode must not use formSelector nor submitButtonSelector"));e.inputName&&console.warn("Manual mode does not use inputName for hidden token. This value will be ignored")}const t="autoFormIntegration"===e.mode&&e.formSelector?document.querySelector(e.formSelector):null;function n(e,t){if(!e)return null;if(t){let n=document.querySelector(e);return n&&n.closest&&n.closest("form")===t?n:t.querySelector(e)}return document.querySelector(e)}let r=null;"autoFormIntegration"===e.mode&&e.inputName&&t&&(r=t.querySelector(`[name="${e.inputName}"]`)||null);const o=n(e.statusSelector,t),a=n(e.verifyButtonSelector,t),i=n(e.submitButtonSelector,t),s=function(){const e=new Uint8Array(16);return crypto.getRandomValues(e),Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")}();let c=!1,l={success:!1,error:!1,cancel:!1,load:!1},u=null;function d(t){if("function"==typeof e.onProgress&&u!==t)try{e.onProgress(t),u=t}catch(e){console.error("onProgress error",e)}}const f=new URL(".",import.meta.url).href.replace(/\/$/,""),m=t=>`${e.apiBaseUrl.replace(/\/$/,"")}/${t}`;function h(e,t=""){o&&(o.textContent=e,o.className=t)}function p(e){let t;if(e instanceof Error&&e.message)t=e.message;else if("string"==typeof e)t=e;else try{t=JSON.stringify(e)}catch{t=String(e)}return t.replace(/^\s*Error\s*:\s*/i,"")}function g(t,...n){if("onSuccess"===t){if(l.success)return;if(l.success=!0,"function"==typeof e.onSuccess)try{e.onSuccess(...n)}catch(e){console.error("onSuccess error",e)}}else if("onError"===t){if(l.error)return;if(l.error=!0,"function"==typeof e.onError)try{e.onError(...n)}catch(e){console.error("onError error",e)}}else if("onEnd"===t){if(l.cancel)return;if(l.cancel=!0,"function"==typeof e.onEnd)try{e.onEnd(...n)}catch(e){console.error("onEnd error",e)}}else if("onStart"===t){if(l.load)return;if(l.load=!0,"function"==typeof e.onStart)try{e.onStart(...n)}catch(e){console.error("onStart error",e)}}}async function y(e,t={}){const n=await fetch(e,t);if(!n.ok){let e;try{e=await n.json()}catch{e={message:await n.text().catch(()=>"")||`HTTP ${n.status}`}}throw new Error(e.message||`HTTP ${n.status}`)}return(n.headers.get("content-type")||"").includes("application/json")?await n.json():await n.text()}async function S(){if(h("Retrieving challenge...","loading"),c)return{success:!1,message:"Another process in progress"};c=!0,l={success:!1,error:!1,cancel:!1,load:!1},a&&(a.disabled=!0);try{const{challenge:n,difficulty:a}=await y(m("captcha.php"),{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"GET_POW_CHALLENGE",claveCaptcha:s})});let i;h("Solving challenge...","loading");try{i=await function(t,n){const r=matchMedia("(pointer: coarse)").matches,a=r?5e3:1e4,i=r?2e3:5e3,s=r?1e4:2e4,c=r?Math.min(2,navigator.hardwareConcurrency||1):Math.min(4,navigator.hardwareConcurrency||4),l=5e5,m=r?2:1;let p=0,g=!1,y=!1;const S=[],w=Array(c).fill(a),E=Array(c).fill(0),v="function"==typeof e.onProgress,b=!!o,k=[{start:0,end:l}];function C(e){if(g||!k.length)return;const{start:r,end:o}=k.shift();let c=E[e]||0,l=w[e]||a,u=l;c>0&&(u=Math.min(s,Math.max(i,Math.floor(l*(2e3/c)))));const d=Math.min(r+u,o);w[e]=d-r,E[e]=Date.now(),S[e].postMessage({challenge:t,difficulty:n,loguear:b,progress:v,start:r,end:d,timeFactor:m,targetTime:2e3}),d<o&&k.unshift({start:d,end:o})}return new Promise((e,t)=>{for(let n=0;n<c;n++){const r=new Worker(`${f}/workers/pow-worker.min.js`);S.push(r),r.onmessage=t=>{const r=t.data||{};if(void 0!==r.nonce&&!y)return y=!0,g=!0,d(100),e(r.nonce),void S.forEach(e=>e.terminate());if(r.done){const e=Date.now()-E[n];E[n]=e,r.partial?(p+=r.nextStart-r.start||0,r.nextStart<r.end&&((o=r.nextStart)<(i=r.end)&&k.unshift({start:o,end:i}))):p+=r.end-r.start||a,g||C(n)}var o,i;if(void 0!==r.perc&&!g){const e=(p+((r.end-r.start)*r.perc/100||0))/l*100;d(Math.min(99.99,Math.max(u,e.toFixed(2))))}void 0===r.log||g||h(`Calculating… (${p} attempts)`,"info")},r.onerror=e=>{y||(y=!0,d(100),t(new Error("Worker error: "+(e?.message||e))),S.forEach(e=>e.terminate()))},C(n)}})}(n,a)}catch(e){const t=`Error: ${p(e)}`;return h(t,"error"),g("onError",e),{success:!1,message:t}}h("Sending result...","loading");const c="VALIDATE_POW_CHALLENGE",l=await y(m("captcha.php"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({challenge:n,nonce:i,proceso:c,claveCaptcha:s})});if(h(l.message||"",l.success?"success":"error"),l.success&&t&&(r||(r=document.createElement("input"),r.name=e.inputName,r.type="hidden",t.appendChild(r)),r.value=l.token_validacion||""),l.success)return g("onSuccess",l.token_validacion||""),{success:!0,token:l.token_validacion||"",message:l.message||""};return g("onError",new Error(l.message||"Validation failed")),{success:!1,message:l.message||"Validation failed"}}catch(e){const t=`Error: ${p(e)}`;return h(t,"error"),g("onError",e),{success:!1,message:t}}finally{a&&(a.disabled=!1),c=!1}}async function w(){const{token:e,target_iterations:t}=await y(m("captcha.php"),{method:"POST",headers:{Accept:"application/json"},body:JSON.stringify({proceso:"getPerformanceChallenge",claveCaptcha:s})});try{await function(e=1e6){return new Promise((t,n)=>{const r=new Worker(`${f}/workers/benchmark-worker.min.js`);r.postMessage({iterations:e}),r.onmessage=e=>{e.data&&e.data.done?t():n(new Error("Benchmark did not finish correctly")),r.terminate()},r.onerror=e=>{n(e),r.terminate()}})}(t)}catch(e){console.log("Benchmark failed",e)}await y(m("captcha.php"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e,proceso:"verifyPerformanceChallenge",claveCaptcha:s})})}async function E(e){if(e.preventDefault(),!c){g("onStart"),u=null,d(0);try{await w(),await S()}catch(e){h(p(e),"error"),g("onError",e)}finally{g("onEnd"),d(100),a&&(a.disabled=!1),c=!1}}}if("manualHandling"===e.mode)a||e.manualHandlingAutoStartOnLoad||console.warn('⚠️ "verifyButtonSelector" was not found and "manualHandlingAutoStartOnLoad" is disabled.\n   Verification cannot be initiated manually or automatically'),a&&e.manualHandlingAutoStartOnLoad&&console.info('ℹ️ "manualHandlingAutoStartOnLoad" is enabled and a verify button also exists.\n   This might be redundant: verification will run automatically when the page loads,\n   but the button will remain visible to run it again if desired'),document.addEventListener("DOMContentLoaded",async()=>{if(a&&a.addEventListener("click",async e=>{try{try{await E(e)}finally{g("onEnd")}}catch(e){h(p(e),"error"),g("onError",e)}}),e.manualHandlingAutoStartOnLoad)try{try{await E()}finally{g("onEnd")}}catch(e){h(p(e),"error"),g("onError",e)}});else if("autoFormIntegration"===e.mode){if(!i)return void console.warn("submitButtonSelector not found");if(!t)return void console.warn("formSelector not found");document.addEventListener("DOMContentLoaded",()=>{i.addEventListener("click",async e=>{if(e.preventDefault(),!i.disabled&&!c){i.disabled=!0,g("onStart"),u=null,d(0);try{try{g("onStart"),u=null,d(0),await w();const e=await S(),n=e.token||(r?r.value:""),o=!!n&&/^[a-f0-9]{32}$/i.test(n);if(e.success&&o)return void t.submit();const a=e.message||"Verification could not be completed";h(a,"error"),g("onError",new Error(a))}finally{g("onEnd")}}catch(e){h(`Error: ${p(e)}`,"error"),g("onError",e)}finally{c=!1,i.disabled=!1,d(100)}}})})}}export{initCaptcha};